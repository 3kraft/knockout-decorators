{"version":3,"file":null,"sources":["../src/common-functions.ts","../src/property-extenders.ts","../src/observable-array.ts","../src/observable-property.ts","../src/knockout-decorators.ts"],"sourcesContent":["import * as ko from \"knockout\";\r\n\r\nexport const extendObject = ko.utils.extend;\r\nexport const objectForEach = ko.utils.objectForEach;\r\nexport const defineProperty = Object.defineProperty.bind(Object);\r\nexport const getPrototypeOf = Object.getPrototypeOf.bind(Object);\r\nexport const getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor.bind(Object);\r\nexport const hasOwnProperty = Function.prototype.call.bind(Object.prototype.hasOwnProperty);\r\nexport const arraySlice = Function.prototype.call.bind(Array.prototype.slice);","/**\r\n * Copyright (c) 2016-2017 Dmitry Panyushkin\r\n * Available under MIT license\r\n */\r\nimport * as ko from \"knockout\";\r\nimport { hasOwnProperty, extendObject, objectForEach } from \"./common-functions\";\r\n\r\nconst EXTENDERS_KEY = typeof Symbol !== \"undefined\"\r\n    ? Symbol(\"ko_decorators_extenders\") : \"__ko_decorators_extenders__\";\r\n\r\ntype Extender = Object | Function;\r\n\r\ninterface ExtendersDictionary {\r\n    [propName: string]: Extender[];\r\n}\r\n\r\nexport function applyExtenders(\r\n    instance: Object, key: string | symbol,\r\n    target: KnockoutObservable<any> | KnockoutComputed<any>\r\n) {\r\n    const dictionary = instance[EXTENDERS_KEY] as ExtendersDictionary;\r\n    const extenders = dictionary && dictionary[key];\r\n    if (extenders) {\r\n        extenders.forEach(extender => {\r\n            const koExtender = extender instanceof Function\r\n                ? extender.call(instance) : extender;\r\n\r\n            target = target.extend(koExtender);\r\n        });\r\n    }\r\n    return target;\r\n}\r\n\r\nexport function defineExtenders(\r\n    prototype: Object, key: string | symbol,\r\n    extendersOrFactory: Object | Function\r\n) {\r\n    let dictionary = prototype[EXTENDERS_KEY] as ExtendersDictionary;\r\n    // if there is no ExtendersDictionary or ExtendersDictionary lives in base class prototype\r\n    if (!hasOwnProperty(prototype, EXTENDERS_KEY)) {\r\n        // clone ExtendersDictionary from base class prototype or create new ExtendersDictionary\r\n        prototype[EXTENDERS_KEY] = dictionary = extendObject({}, dictionary) as ExtendersDictionary;\r\n        // clone Extenders arrays for each property key\r\n        objectForEach(dictionary, (key, extenders) => {\r\n            dictionary[key] = [...extenders];\r\n        });\r\n    }\r\n    // get existing Extenders array or create new array\r\n    const extenders = dictionary[key] || (dictionary[key] = []);\r\n    // add new Extenders\r\n    extenders.push(extendersOrFactory);\r\n}","/**\r\n * Copyright (c) 2016-2017 Dmitry Panyushkin\r\n * Available under MIT license\r\n */\r\nimport * as ko from \"knockout\";\r\nimport { defineProperty, hasOwnProperty, arraySlice } from \"./common-functions\";\r\nimport { applyExtenders } from \"./property-extenders\";\r\nimport { prepareReactiveValue } from \"./observable-property\";\r\n\r\ntype ObsArray = KnockoutObservableArray<any> & { [fnName: string]: Function };\r\n\r\nconst deepArrayMethods = [\"pop\", \"reverse\", \"shift\", \"sort\"];\r\nconst allArrayMethods = [...deepArrayMethods, \"push\", \"splice\", \"unshift\"];\r\n\r\nconst deepObservableArrayMethods = [\"remove\", \"removeAll\", \"destroy\", \"destroyAll\", \"replace\", \"subscribe\"];\r\nconst allObservableArrayMethods = [...deepObservableArrayMethods, \"replace\"];\r\n\r\nconst allMethods = [...allArrayMethods, ...allObservableArrayMethods, \"mutate\", \"set\"];\r\n\r\nexport function defineObservableArray(\r\n    instance: Object, key: string | symbol, value: any[], deep: boolean\r\n) {\r\n    const obsArray = applyExtenders(instance, key, ko.observableArray()) as ObsArray;\r\n    \r\n    let insideObsArray = false;\r\n\r\n    defineProperty(instance, key, {\r\n        configurable: true,\r\n        enumerable: true,\r\n        get: obsArray,\r\n        set: setter, \r\n    });\r\n\r\n    setter(value);\r\n\r\n    function setter(newValue: any[]) {\r\n        const lastValue = obsArray.peek();\r\n        // if we got new value\r\n        if (lastValue !== newValue) {\r\n            if (Array.isArray(lastValue)) {\r\n                // if lastValue array methods were already patched\r\n                if (hasOwnProperty(lastValue, \"mutate\")) {\r\n                    // clear patched array methods on lastValue (see unit tests)\r\n                    allMethods.forEach(fnName => {\r\n                        delete lastValue[fnName];\r\n                    });\r\n                }\r\n            }\r\n            if (Array.isArray(newValue)) {\r\n                // if new value array methods were already connected with another @observable\r\n                if (hasOwnProperty(newValue, \"mutate\")) {\r\n                    // clone new value to prevent corruption of another @observable (see unit tests)\r\n                    newValue = [...newValue];\r\n                }\r\n                // if deep option is set\r\n                if (deep) {\r\n                    // make all array items reactive\r\n                    for (let i = 0; i < newValue.length; ++i) {\r\n                        newValue[i] = prepareReactiveValue(newValue[i]);\r\n                    }\r\n                }\r\n                // call ko.observableArray.fn[fnName] instead of Array.prototype[fnName]\r\n                patchArrayMethods(newValue);\r\n            }\r\n        }\r\n        // update obsArray contents\r\n        insideObsArray = true;\r\n        obsArray(newValue);\r\n        insideObsArray = false;\r\n    }\r\n\r\n    function patchArrayMethods(array: any[]) {\r\n        const arrayMethods = deep ? deepArrayMethods : allArrayMethods;\r\n\r\n        arrayMethods.forEach(fnName => defineProperty(array, fnName, {\r\n            configurable: true,\r\n            value() {\r\n                if (insideObsArray) {\r\n                    return Array.prototype[fnName].apply(array, arguments);\r\n                }\r\n                insideObsArray = true;\r\n                const result = obsArray[fnName].apply(obsArray, arguments);\r\n                insideObsArray = false;\r\n                return result;\r\n            }\r\n        }));\r\n        \r\n        const observableArrayMethods = deep ? deepObservableArrayMethods : allObservableArrayMethods;\r\n\r\n        observableArrayMethods.forEach(fnName => defineProperty(array, fnName, {\r\n            configurable: true,\r\n            value() {\r\n                insideObsArray = true;\r\n                const result = obsArray[fnName].apply(obsArray, arguments);\r\n                insideObsArray = false;\r\n                return result;\r\n            }\r\n        }));\r\n\r\n        if (deep) {\r\n            defineProperty(array, \"push\", {\r\n                configurable: true,\r\n                value() {\r\n                    if (insideObsArray) {\r\n                        return Array.prototype.push.apply(array, arguments);\r\n                    }\r\n                    let args = arraySlice(arguments);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        args[i] = prepareReactiveValue(args[i]);\r\n                    }\r\n                    insideObsArray = true;\r\n                    const result = obsArray.push.apply(obsArray, args);\r\n                    insideObsArray = false;\r\n                    return result;\r\n                }\r\n            });\r\n\r\n            defineProperty(array, \"unshift\", {\r\n                configurable: true,\r\n                value() {\r\n                    if (insideObsArray) {\r\n                        return Array.prototype.unshift.apply(array, arguments);\r\n                    }\r\n                    let args = arraySlice(arguments);\r\n                    for (let i = 0; i < args.length; ++i) {\r\n                        args[i] = prepareReactiveValue(args[i]);\r\n                    }\r\n                    insideObsArray = true;\r\n                    const result = obsArray.unshift.apply(obsArray, args);\r\n                    insideObsArray = false;\r\n                    return result;\r\n                }\r\n            });\r\n\r\n            defineProperty(array, \"splice\", {\r\n                configurable: true,\r\n                value() {\r\n                    if (insideObsArray) {\r\n                        return Array.prototype.splice.apply(array, arguments);\r\n                    }\r\n\r\n                    let result: any[];\r\n                    \r\n                    insideObsArray = true;\r\n                    switch (arguments.length) {\r\n                        case 0:\r\n                        case 1:\r\n                        case 2: {\r\n                            result = obsArray.splice.apply(obsArray, arguments);\r\n                            break;\r\n                        }\r\n                        case 3: {\r\n                            result = obsArray.splice(\r\n                                arguments[0], arguments[1], prepareReactiveValue(arguments[2])\r\n                            );\r\n                            break;\r\n                        }\r\n                        default: {\r\n                            const args = arraySlice(arguments);\r\n                            for (let i = 2; i < args.length; ++i) {\r\n                                args[i] = prepareReactiveValue(args[i]);\r\n                            }\r\n                            result = obsArray.splice.apply(obsArray, arguments);\r\n                            break;\r\n                        }\r\n                    }\r\n                    insideObsArray = false;\r\n\r\n                    return result;\r\n                }\r\n            });\r\n\r\n            defineProperty(array, \"replace\", {\r\n                configurable: true,\r\n                value(oldItem: any, newItem: any) {\r\n                    insideObsArray = true;\r\n                    const result = obsArray.replace(oldItem, prepareReactiveValue(newItem));\r\n                    insideObsArray = false;\r\n                    return result;\r\n                }\r\n            });\r\n\r\n            defineProperty(array, \"mutate\", {\r\n                configurable: true,\r\n                value(mutator: (array?: any[]) => void) {\r\n                    const array = obsArray.peek();\r\n                    obsArray.valueWillMutate();\r\n                    mutator(array);\r\n                    for (let i = 0; i < array.length; ++i) {\r\n                        array[i] = prepareReactiveValue(array[i]);\r\n                    }\r\n                    obsArray.valueHasMutated();\r\n                }\r\n            });\r\n\r\n            defineProperty(array, \"set\", {\r\n                configurable: true,\r\n                value(index: number, newItem: any) {\r\n                    return obsArray.splice(index, 1, prepareReactiveValue(newItem))[0];\r\n                }\r\n            });\r\n        } else {\r\n            defineProperty(array, \"mutate\", {\r\n                configurable: true,\r\n                value(mutator: (array?: any[]) => void) {\r\n                    obsArray.valueWillMutate();\r\n                    mutator(obsArray.peek());\r\n                    obsArray.valueHasMutated();\r\n                }\r\n            });\r\n\r\n            defineProperty(array, \"set\", {\r\n                configurable: true,\r\n                value(index: number, newItem: any) {\r\n                    return obsArray.splice(index, 1, newItem)[0];\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport interface ObservableArray<T> extends Array<T> {\r\n    replace(oldItem: T, newItem: T): void;\r\n\r\n    remove(item: T): T[];\r\n    remove(removeFunction: (item: T) => boolean): T[];\r\n    \r\n    removeAll(): T[];\r\n    removeAll(items: T[]): T[];\r\n\r\n    destroy(item: T): void;\r\n    destroy(destroyFunction: (item: T) => boolean): void;\r\n    \r\n    destroyAll(): void;\r\n    destroyAll(items: T[]): void;\r\n\r\n    subscribe(callback: (val: T[]) => void): KnockoutSubscription;\r\n    subscribe(callback: (val: T[]) => void, callbackTarget: any): KnockoutSubscription;\r\n    subscribe(callback: (val: any[]) => void, callbackTarget: any, event: string): KnockoutSubscription;\r\n\r\n    /**\r\n     * Run mutator function that can write to array at some index (`array[index] = value;`)\r\n     * Then notify about observableArray changes\r\n     */\r\n    mutate(mutator: (arrayValue: T[]) => void): void;\r\n\r\n    /**\r\n     * Replace value at some index and return old value\r\n     */\r\n    set(index: number, value: T): T;\r\n}","/**\r\n * Copyright (c) 2016-2017 Dmitry Panyushkin\r\n * Available under MIT license\r\n */\r\nimport * as ko from \"knockout\";\r\nimport { objectForEach, defineProperty, hasOwnProperty, getPrototypeOf } from \"./common-functions\";\r\nimport { applyExtenders } from \"./property-extenders\";\r\nimport { defineObservableArray } from \"./observable-array\";\r\n\r\nexport function defineObservableProperty(\r\n    instance: Object, key: string | symbol, value: any, deep: boolean\r\n) {\r\n    const observable = applyExtenders(instance, key, ko.observable());\r\n\r\n    let setter = observable as Function;\r\n    \r\n    if (deep) {\r\n        setter = function (newValue: any) {\r\n            observable(prepareReactiveValue(newValue));\r\n        };\r\n    }\r\n\r\n    defineProperty(instance, key, {\r\n        configurable: true,\r\n        enumerable: true,\r\n        get: observable,\r\n        set: setter,\r\n    });\r\n    \r\n    setter(value);\r\n}\r\n\r\nexport function prepareReactiveValue(value: any) {\r\n    if (typeof value === \"object\") {\r\n        if (Array.isArray(value) || value === null) {\r\n            // value is Array or null\r\n            return value;\r\n        } else if (value.constructor === Object) {\r\n            // value is plain Object\r\n            return prepareReactiveObject(value); \r\n        } else if (hasOwnProperty(value, \"constructor\")) {\r\n            const prototype = getPrototypeOf(value);\r\n            if (prototype === Object.prototype || prototype === null) {\r\n                // value is plain Object\r\n                return prepareReactiveObject(value);\r\n            }\r\n        }\r\n    }\r\n    // value is primitive, function or class instance\r\n    return value;\r\n}\r\n\r\nconst REACTIVE_KEY = typeof Symbol !== \"undefined\"\r\n    ? Symbol(\"ko_decorators_reactive\") : \"__ko_decorators_reactive__\";\r\n\r\nexport function prepareReactiveObject(instance: Object) {\r\n    if (!hasOwnProperty(instance, REACTIVE_KEY)) {\r\n        // mark instance as ObservableObject\r\n        defineProperty(instance, REACTIVE_KEY, {\r\n            configurable: true,\r\n            value: void 0,\r\n        });\r\n        // define deep observable properties\r\n        objectForEach(instance, (key, value) => {\r\n            if (Array.isArray(value)) {\r\n                defineObservableArray(instance, key, value, true);\r\n            } else {\r\n                defineObservableProperty(instance, key, value, true);\r\n            }\r\n        });\r\n    }\r\n    return instance;\r\n}","/**\r\n * Copyright (c) 2016-2017 Dmitry Panyushkin\r\n * Available under MIT license\r\n * Version: 0.9.0\r\n */\r\nimport * as ko from \"knockout\";\r\nimport { extendObject, defineProperty, hasOwnProperty, getOwnPropertyDescriptor, arraySlice } from \"./common-functions\";\r\nimport { defineExtenders, applyExtenders } from \"./property-extenders\";\r\nimport { defineObservableProperty, prepareReactiveObject } from \"./observable-property\";\r\nimport { defineObservableArray } from \"./observable-array\";\r\n\r\n/**\r\n * Property decorator that creates hidden (shallow) ko.observable with ES6 getter and setter for it\r\n * If initialized by Array then hidden (shallow) ko.observableArray will be created\r\n */\r\nexport function observable(prototype: Object, key: string | symbol) {\r\n    defineProperty(prototype, key, {\r\n        configurable: true,\r\n        get() {\r\n            throw new Error(\"@observable property '\" + key.toString() + \"' was not initialized\");\r\n        },\r\n        set(value: any) {\r\n            if (Array.isArray(value)) {\r\n                defineObservableArray(this, key, value, false);\r\n            } else {\r\n                defineObservableProperty(this, key, value, false);\r\n            }\r\n        },\r\n    });\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Property decorator that creates hidden (deep) ko.observable with ES6 getter and setter for it\r\n * If initialized by Array then hidden (deep) ko.observableArray will be created\r\n */\r\nexport function reactive(prototype: Object, key: string | symbol) {\r\n    defineProperty(prototype, key, {\r\n        configurable: true,\r\n        get() {\r\n            throw new Error(\"@reactive property '\" + key.toString() + \"' was not initialized\");\r\n        },\r\n        set(value: any) {\r\n            if (Array.isArray(value)) {\r\n                defineObservableArray(this, key, value, true);\r\n            } else {\r\n                defineObservableProperty(this, key, value, true);\r\n            }\r\n        },\r\n    });\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Accessor decorator that wraps ES6 getter to hidden ko.pureComputed\r\n * \r\n * Setter is not wrapped to hidden ko.pureComputed and stays unchanged\r\n *\r\n * But we can still extend getter @computed by extenders like { rateLimit: 500 } \r\n */\r\nexport function computed(prototype: Object, key: string | symbol, desc: PropertyDescriptor) {\r\n    const { get, set } = desc || (desc = getOwnPropertyDescriptor(prototype, key));\r\n    desc.get = function () {\r\n        const computed = applyExtenders(this, key, ko.pureComputed(get, this));\r\n        defineProperty(this, key, {\r\n            configurable: true,\r\n            get: computed,\r\n            set: set,\r\n        });\r\n        return computed();\r\n    };\r\n    return desc;\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Property decorator that creates hidden (shallow) ko.observableArray with ES6 getter and setter for it\r\n */\r\nexport function observableArray(prototype: Object, key: string | symbol) {\r\n    defineProperty(prototype, key, {\r\n        configurable: true,\r\n        get() {\r\n            throw new Error(\"@observableArray property '\" + key.toString() + \"' was not initialized\");\r\n        },\r\n        set(value: any[]) {\r\n            defineObservableArray(this, key, value, false);\r\n        },\r\n    });\r\n}\r\n\r\nexport interface ObservableArray<T> extends Array<T> {\r\n    replace(oldItem: T, newItem: T): void;\r\n\r\n    remove(item: T): T[];\r\n    remove(removeFunction: (item: T) => boolean): T[];\r\n    \r\n    removeAll(): T[];\r\n    removeAll(items: T[]): T[];\r\n\r\n    destroy(item: T): void;\r\n    destroy(destroyFunction: (item: T) => boolean): void;\r\n    \r\n    destroyAll(): void;\r\n    destroyAll(items: T[]): void;\r\n\r\n    subscribe(callback: (val: T[]) => void): KnockoutSubscription;\r\n    subscribe(callback: (val: T[]) => void, callbackTarget: any): KnockoutSubscription;\r\n    subscribe(callback: (val: any[]) => void, callbackTarget: any, event: string): KnockoutSubscription;\r\n\r\n    /**\r\n     * Run mutator function that can write to array at some index (`array[index] = value;`)\r\n     * Then notify about observableArray changes\r\n     */\r\n    mutate(mutator: (arrayValue: T[]) => void): void;\r\n\r\n    /**\r\n     * Replace value at some index and return old value\r\n     */\r\n    set(index: number, value: T): T;\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Apply extenders to decorated @observable\r\n */\r\nexport function extend(extenders: Object): PropertyDecorator;\r\n/**\r\n * Apply extenders to decorated @observable\r\n */\r\nexport function extend(extendersFactory: () => Object): PropertyDecorator;\r\n/**\r\n * Apply extenders to decorated @observable\r\n * @extendersOrFactory { Object | Function } Knockout extenders definition or factory that produces definition\r\n */\r\nexport function extend(extendersOrFactory: Object | Function) {\r\n    return function (prototype: Object, key: string | symbol) {\r\n        defineExtenders(prototype, key, extendersOrFactory);\r\n    }\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\nexport interface ComponentConstructor {\r\n    new (\r\n        params?: any,\r\n        element?: Node,\r\n        templateNodes?: Node[]\r\n    ): any;\r\n}\r\n\r\nexport type ComponentDecorator = (constructor: ComponentConstructor) => void;\r\n\r\nexport type TemplateConfig = (\r\n    string\r\n    | Node[] \r\n    | DocumentFragment \r\n    | { require: string }\r\n    | { element: string | Node }\r\n);\r\n\r\n/**\r\n * Register Knockout component by decorating ViewModel class\r\n */\r\nexport function component(\r\n    name: string,\r\n    options?: Object\r\n): ComponentDecorator;\r\n/**\r\n * Register Knockout component by decorating ViewModel class\r\n */\r\nexport function component(\r\n    name: string,\r\n    template: TemplateConfig,\r\n    options?: Object\r\n): ComponentDecorator;\r\n/**\r\n * Register Knockout component by decorating ViewModel class\r\n */\r\nexport function component(\r\n    name: string,\r\n    template: TemplateConfig,\r\n    styles: string | string[],\r\n    options?: Object\r\n): ComponentDecorator;\r\n/**\r\n * Register Knockout component by decorating ViewModel class\r\n * @param name { String } Name of component\r\n * @param template { Any } Knockout template definition\r\n * @param styles { Any } Ignored parameter (used for `require()` styles by webpack etc.)\r\n * @param options { Object } Another options that passed directly to `ko.components.register()`\r\n */\r\nexport function component(\r\n    name: string,\r\n    template?: any,\r\n    styles?: any,\r\n    options?: Object\r\n) {\r\n    if (options === void 0) {\r\n        if (styles === void 0) {\r\n            if (typeof template === \"object\"\r\n                && template.constructor === Object\r\n                && !(\"require\" in template)\r\n                && !(\"element\" in template)\r\n            ) {\r\n                options = template;\r\n                template = void 0;\r\n            }\r\n        } else if (typeof styles === \"object\") {\r\n            options = styles;\r\n            styles = void 0;\r\n        }\r\n    }\r\n\r\n    return function (constructor: ComponentConstructor) {\r\n        ko.components.register(name, extendObject({\r\n            viewModel: constructor.length < 2 ? constructor : {\r\n                createViewModel(params, { element, templateNodes }) {\r\n                    return new constructor(params, element, templateNodes);\r\n                }\r\n            },\r\n            template: template || \"<!---->\",\r\n            synchronous: true,\r\n        }, options));\r\n    }\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Like https://github.com/jayphelps/core-decorators.js @autobind but less smart and complex\r\n * Do NOT use with ES6 inheritance!\r\n */\r\nexport function autobind(prototype: Object, key: string | symbol, desc: PropertyDescriptor) {\r\n    const { value, configurable, enumerable } = desc || (desc = getOwnPropertyDescriptor(prototype, key));\r\n    return {\r\n        configurable: configurable,\r\n        enumerable: enumerable,\r\n        get() {\r\n            if (this === prototype) {\r\n                return value;\r\n            }\r\n            const bound = value.bind(this);\r\n            defineProperty(this, key, {\r\n                configurable: true,\r\n                value: bound,\r\n            });\r\n            return bound;\r\n        }\r\n    } as PropertyDescriptor;\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Define hidden ko.subscribable, that notifies subscribers when decorated method is invoked\r\n */\r\nexport function event(prototype: Object, key: string | symbol): void;\r\n/**\r\n * Define hidden ko.subscribable, that notifies subscribers when decorated method is invoked\r\n */\r\nexport function event(prototype: Object, key: string | symbol, desc: PropertyDescriptor): PropertyDescriptor;\r\n/**\r\n * Define hidden ko.subscribable, that notifies subscribers when decorated method is invoked\r\n */\r\nexport function event(prototype: Object, key: string | symbol, desc?: PropertyDescriptor) {\r\n    return {\r\n        configurable: false,\r\n        get() {\r\n            const subscribable = new ko.subscribable();\r\n            \r\n            function eventNotifier () {\r\n                const eventArgs = arraySlice(arguments);\r\n                subscribable.notifySubscribers(eventArgs);\r\n            }\r\n\r\n            eventNotifier[\"subscribable\"] = subscribable;\r\n\r\n            defineProperty(this, key, {\r\n                configurable: true,\r\n                value: eventNotifier,\r\n            });\r\n\r\n            return eventNotifier;\r\n        },\r\n    } as PropertyDescriptor;\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Subscribe callback to dependency changes\r\n */\r\nexport function subscribe<T>(\r\n    getDependency: () => T, \r\n    callback: (value: T) => void,\r\n    options?: { once?: boolean, event?: string }\r\n): KnockoutSubscription;\r\n/**\r\n * Subscribe callback to  some `@event`\r\n */\r\nexport function subscribe(\r\n    event: () => void, \r\n    callback: () => void,\r\n    options?: { once?: boolean }\r\n): KnockoutSubscription;\r\n/**\r\n * Subscribe callback to  some `@event`\r\n */\r\nexport function subscribe<T>(\r\n    event: (arg: T) => void, \r\n    callback: (arg: T) => void,\r\n    options?: { once?: boolean }\r\n): KnockoutSubscription;\r\n/**\r\n * Subscribe callback to  some `@event`\r\n */\r\nexport function subscribe<T1, T2>(\r\n    event: (arg1: T1, arg2: T2) => void, \r\n    callback: (arg1: T1, arg2: T2) => void,\r\n    options?: { once?: boolean }\r\n): KnockoutSubscription;\r\n/**\r\n * Subscribe callback to  some `@event`\r\n */\r\nexport function subscribe<T1, T2>(\r\n    event: (arg1: T1, arg2: T2, ...args: any[]) => void, \r\n    callback: (arg1: T1, arg2: T2, ...args: any[]) => void,\r\n    options?: { once?: boolean }\r\n): KnockoutSubscription;\r\n/**\r\n * Subscribe callback to dependency changes\r\n */\r\nexport function subscribe<T>(\r\n    dependencyOrEvent: Function,\r\n    callback: (...args: any[]) => void,\r\n    options?: { once?: boolean, event?: string }\r\n): KnockoutSubscription {\r\n    const once = options && options.once || false;\r\n    \r\n    if (hasOwnProperty(dependencyOrEvent, \"subscribable\")) {\r\n        // subscribe to @event\r\n        const subscribable = dependencyOrEvent[\"subscribable\"] as KnockoutSubscribable<any[]>;\r\n\r\n        let handler: (value: any[]) => void;\r\n        if (once) {\r\n            handler = function (eventArgs: any[]) {\r\n                callback.apply(null, eventArgs);\r\n                subscription.dispose();\r\n            };\r\n        } else {\r\n            handler = function (eventArgs: any[]) {\r\n                callback.apply(null, eventArgs);\r\n            };\r\n        }\r\n\r\n        const subscription = subscribable.subscribe(handler);\r\n\r\n        return subscription;\r\n    } else {\r\n        // subscribe to @observable, @reactive or @computed\r\n        const event = options && options.event || \"change\";\r\n\r\n        const computed = ko.computed(dependencyOrEvent as () => T);\r\n        \r\n        let handler: (value: T) => void;\r\n        if (once) {\r\n            handler = function () {\r\n                callback.apply(null, arguments);\r\n                subscription.dispose();\r\n            };\r\n        } else {\r\n            handler = callback;\r\n        }\r\n\r\n        const subscription = computed.subscribe(handler, null, event);\r\n        \r\n        const originalDispose = subscription.dispose;\r\n        // dispose hidden computed with subscription\r\n        subscription.dispose = function () {\r\n            originalDispose.call(this);\r\n            computed.dispose();\r\n        };\r\n\r\n        return subscription;\r\n    }\r\n}\r\n\r\n/*---------------------------------------------------------------------------*/\r\n\r\n/**\r\n * Get internal ko.observable() for object property decodated by @observable\r\n */\r\nexport function unwrap(instance: Object, key: string | symbol): any;\r\n/**\r\n * Get internal ko.observable() for object property decodated by @observable\r\n */\r\nexport function unwrap<T>(instance: Object, key: string | symbol): KnockoutObservable<T>;\r\n/**\r\n * Get internal ko.observable() for object property decodated by @observable\r\n */\r\nexport function unwrap(instance: Object, key: string | symbol) {\r\n    if (!hasOwnProperty(instance, key)) {\r\n        // invoke getter on instance.__proto__ that defines property on instance\r\n        instance[key];\r\n    }\r\n    return getOwnPropertyDescriptor(instance, key).get;\r\n}"],"names":["ko.utils","ko.observableArray","observable","ko.observable","computed","ko.pureComputed","ko.components","subscribable","ko.subscribable","ko.computed"],"mappings":"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"}