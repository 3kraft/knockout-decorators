{"version":3,"file":null,"sources":["../src/knockout-decorators.ts"],"sourcesContent":["import * as ko from \"knockout\";\r\n\r\nexport interface ComponentConstructor {\r\n    new (\r\n        params?: any,\r\n        element?: Node,\r\n        templateNodes?: Node[]\r\n    ): any;\r\n}\r\n\r\nexport type ComponentDecorator = (constructor: ComponentConstructor) => void;\r\n\r\nexport type TemplateConfig = (\r\n    string\r\n    | Node[] \r\n    | DocumentFragment \r\n    | { require: string }\r\n    | { element: string | Node }\r\n);\r\n\r\nconst extend = ko.utils.extend;\r\nconst objectForEach = ko.utils.objectForEach;\r\nconst defProp = Object.defineProperty.bind(Object);\r\nconst getDescriptor = Object.getOwnPropertyDescriptor.bind(Object);\r\n\r\n/**\r\n * Register Knockout component by decorating ViewModel class\r\n */\r\nexport function component(\r\n    name: string,\r\n    options?: Object\r\n): ComponentDecorator;\r\nexport function component(\r\n    name: string,\r\n    template: TemplateConfig,\r\n    options?: Object\r\n): ComponentDecorator;\r\nexport function component(\r\n    name: string,\r\n    template: TemplateConfig,\r\n    styles: string | string[],\r\n    options?: Object\r\n): ComponentDecorator;\r\n\r\n/**\r\n * Register Knockout component by decorating ViewModel class\r\n * @param name { String } Name of component\r\n * @param template { Any } Knockout template definition\r\n * @param styles { Any } Ignored parameter (used for `require()` styles by webpack etc.)\r\n * @param options { Object } Another options that passed directly to `ko.components.register()`\r\n */\r\nexport function component(\r\n    name: string,\r\n    template?: any,\r\n    styles?: any,\r\n    options?: Object\r\n) {\r\n    if (options === void 0) {\r\n        if (styles === void 0) {\r\n            if (typeof template === \"object\"\r\n                && template.constructor === Object\r\n                && !(\"require\" in template)\r\n                && !(\"element\" in template)\r\n            ) {\r\n                options = template;\r\n                template = void 0;\r\n            }\r\n        } else if (typeof styles === \"object\") {\r\n            options = styles;\r\n            styles = void 0;\r\n        }\r\n    }\r\n\r\n    return function (constructor: ComponentConstructor) {\r\n        ko.components.register(name, extend({\r\n            viewModel: constructor.length < 2 ? constructor : {\r\n                createViewModel(params, { element, templateNodes }) {\r\n                    return new constructor(params, element, templateNodes);\r\n                }\r\n            },\r\n            template: template || \"<!---->\",\r\n            synchronous: true,\r\n        }, options));\r\n    }\r\n}\r\n\r\nconst DECORATORS_KEY = typeof Symbol !== \"undefined\"\r\n    ? Symbol(\"ko_decorators\") : \"__ko_decorators_\";\r\n\r\nconst SUBSCRIPTIONS_KEY = typeof Symbol !== \"undefined\"\r\n    ? Symbol(\"ko_decorators_subscriptions\") : \"__ko_decorators_subscriptions_\";\r\n\r\nconst DISPOSABLE_KEY = typeof Symbol !== \"undefined\"\r\n    ? Symbol(\"ko_decorators_disposable\") : \"__ko_decorators_disposable_\";\r\n\r\nconst enum DecoratorType {\r\n    Extend, Subscribe,\r\n}\r\n\r\ninterface Decorator {\r\n    type: DecoratorType,\r\n    value: any,\r\n    event?: string,\r\n    dispose?: boolean,\r\n}\r\n\r\ninterface MetaData {\r\n    [propName: string]: Decorator[],\r\n}\r\n\r\nexport interface Disposable {\r\n    dispose(): void,\r\n}\r\n\r\nfunction getMetaData(prototype: Object) {\r\n    let metaData: MetaData = prototype[DECORATORS_KEY];\r\n    if (!prototype.hasOwnProperty(DECORATORS_KEY)) {\r\n        prototype[DECORATORS_KEY] = metaData = extend({}, metaData);\r\n        objectForEach(metaData, (key, decorators) => {\r\n            metaData[key] = [...decorators];\r\n        });\r\n    }\r\n    return metaData;\r\n}\r\n\r\nfunction getDecorators(metaData: MetaData, key: string | symbol) {\r\n    return metaData[key] || (metaData[key] = []);\r\n}\r\n\r\nfunction getSubscriptions(instance: Object): Disposable[] {\r\n    return instance[SUBSCRIPTIONS_KEY] || (instance[SUBSCRIPTIONS_KEY] = []);\r\n}\r\n\r\nfunction applyDecorators(\r\n    instance: Object, key: string | symbol,\r\n    target: ko.Observable<any> | ko.PureComputed<any>\r\n) {\r\n    let metaData: MetaData = instance[DECORATORS_KEY];\r\n    let decorators = metaData && metaData[key];\r\n    if (decorators) {\r\n        decorators.forEach(d => {\r\n            switch (d.type) {\r\n                case DecoratorType.Extend:\r\n                    let extender = d.value as Object;\r\n                    target = target.extend(extender);\r\n                    break;\r\n                case DecoratorType.Subscribe:\r\n                    let subscription = target.subscribe(d.value, instance, d.event);\r\n                    if (d.dispose) {\r\n                        getSubscriptions(instance).push(subscription);\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n    return target;\r\n}\r\n\r\nfunction redefineDispose(prototype: Object) {\r\n    if (prototype[DISPOSABLE_KEY]) { return; }\r\n    prototype[DISPOSABLE_KEY] = true;\r\n\r\n    let original = prototype[\"dispose\"];\r\n    prototype[\"dispose\"] = function dispose() {\r\n        let disposables = this[SUBSCRIPTIONS_KEY] as Disposable[];\r\n        if (disposables) {\r\n            disposables.forEach(s => { s.dispose(); });\r\n        }\r\n        if (original) {\r\n            return original.apply(this, arguments);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Property decorator that creates hidden ko.observable with ES6 getter and setter for it\r\n */\r\nexport function observable(prototype: Object, key: string | symbol) {\r\n    defProp(prototype, key, {\r\n        get() {\r\n            const observable = applyDecorators(this, key, ko.observable());\r\n            defProp(this, key, { get: observable, set: observable });\r\n            return observable();\r\n        },\r\n        set(value) {\r\n            const observable = applyDecorators(this, key, ko.observable());\r\n            defProp(this, key, { get: observable, set: observable });\r\n            observable(value);\r\n        },\r\n    });\r\n}\r\n\r\n/**\r\n * Accessor decorator that wraps ES6 getter and setter to hidden ko.pureComputed\r\n */\r\nexport function computed(prototype: Object, key: string | symbol) {\r\n    const { get, set } = getDescriptor(prototype, key);\r\n    if (!set) {\r\n        defProp(prototype, key, {\r\n            get() {\r\n                const computed = applyDecorators(this, key, ko.pureComputed(get, this));\r\n                defProp(this, key, { get: computed });\r\n                return computed();\r\n            }\r\n        });\r\n    } else {\r\n        defProp(prototype, key, {\r\n            get() {\r\n                const computed = applyDecorators(this, key,\r\n                    ko.pureComputed({ read: get, write: set, owner: this })\r\n                );\r\n                defProp(this, key, { get: computed, set: computed });\r\n                return computed();\r\n            },\r\n            set(value: any) {\r\n                const computed = applyDecorators(this, key,\r\n                    ko.pureComputed({ read: get, write: set, owner: this })\r\n                );\r\n                defProp(this, key, { get: computed, set: computed });\r\n                computed(value);\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\ntype ObsArray = ko.ObservableArray<any> & { [fnName: string]: Function };\r\n\r\nconst arrayMethods = [\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"];\r\nconst observableArrayMethods = [\"remove\", \"removeAll\", \"destroy\", \"destroyAll\", \"replace\", \"subscribe\"];\r\n\r\nfunction defObservableArray(instance: Object, key: string | symbol) {\r\n    const obsArray = applyDecorators(instance, key, ko.observableArray()) as ObsArray;\r\n    \r\n    let insideObsArray = false;\r\n    defProp(instance, key, {\r\n        get: obsArray,\r\n        set(array: any[]) {\r\n            if (array) {\r\n                arrayMethods.forEach(fnName => defProp(array, fnName, {\r\n                    enumerable: false,\r\n                    value: function () {\r\n                        if (insideObsArray) {\r\n                            return Array.prototype[fnName].apply(array, arguments);\r\n                        }\r\n                        insideObsArray = true;\r\n                        const result = obsArray[fnName].apply(obsArray, arguments);\r\n                        insideObsArray = false;\r\n                        return result;\r\n                    }\r\n                }));\r\n                observableArrayMethods.forEach(fnName => defProp(array, fnName, {\r\n                    enumerable: false,\r\n                    value: function () {\r\n                        insideObsArray = true;\r\n                        const result = obsArray[fnName].apply(obsArray, arguments);\r\n                        insideObsArray = false;\r\n                        return result;\r\n                    }\r\n                }));\r\n            }\r\n            insideObsArray = true;\r\n            obsArray(array);\r\n            insideObsArray = false;\r\n        }\r\n    });\r\n}\r\n\r\nexport interface ObservableArray<T> extends Array<T> {\r\n    replace(oldItem: T, newItem: T): void;\r\n\r\n    remove(item: T): T[];\r\n    remove(removeFunction: (item: T) => boolean): T[];\r\n    \r\n    removeAll(): T[];\r\n    removeAll(items: T[]): T[];\r\n\r\n    destroy(item: T): void;\r\n    destroy(destroyFunction: (item: T) => boolean): void;\r\n    \r\n    destroyAll(): void;\r\n    destroyAll(items: T[]): void;\r\n\r\n    subscribe(callback: (val: T[]) => void): Disposable;\r\n    subscribe(callback: (val: T[]) => void, callbackTarget: any): Disposable;\r\n    subscribe(callback: (val: T[]) => void, callbackTarget: any, event: string): Disposable;\r\n}\r\n\r\n/**\r\n * Property decorator that creates hidden ko.observableArray with ES6 getter and setter for it\r\n */\r\nexport function observableArray(prototype: Object, key: string | symbol) {\r\n    defProp(prototype, key, {\r\n        get() {\r\n            defObservableArray(this, key);\r\n            return this[key];\r\n        },\r\n        set(value: any[]) {\r\n            defObservableArray(this, key);\r\n            return this[key] = value;\r\n        },\r\n    });\r\n}\r\n\r\n/**\r\n * Replace original method with factory that produces ko.computed from original method\r\n */\r\nexport function observer(autoDispose: boolean): MethodDecorator;\r\nexport function observer(prototype: Object, key: string | symbol): void;\r\n\r\n/**\r\n * Replace original method with factory that produces ko.computed from original method\r\n * @param autoDispose { Boolean } if true then subscription will be disposed when entire ViewModel is disposed\r\n */\r\nexport function observer(prototypeOrAutoDispose: Object | boolean, key?: string | symbol) {\r\n    let autoDispose: boolean;\r\n    if (typeof prototypeOrAutoDispose === \"boolean\" && key === void 0) {\r\n        autoDispose = prototypeOrAutoDispose;       // @observer(false)\r\n        return decorator;                           // onSomethingChange() {}\r\n    } else if (typeof prototypeOrAutoDispose === \"object\" && key !== void 0) {\r\n        autoDispose = true;                         // @observer\r\n        decorator(prototypeOrAutoDispose, key);     // onSomethingChange() {}\r\n    } else {\r\n        throw new Error(\"Can not use @observer decorator this way\");\r\n    }\r\n\r\n    function decorator(prototype: Object, key: string | symbol) {\r\n        let original = prototype[key] as Function;\r\n        prototype[key] = function (...args) {\r\n            let computed = ko.computed(() => original.apply(this, args));\r\n            if (autoDispose) {\r\n                getSubscriptions(this).push(computed);\r\n            }\r\n            return computed;\r\n        }\r\n        if (autoDispose) {\r\n            redefineDispose(prototype);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Subscribe to observable or computed by name or by specifying callback explicitely\r\n */\r\nexport function subscribe(callback: (value: any) => void, event?: string, autoDispose?: boolean): PropertyDecorator;\r\nexport function subscribe(targetOrCallback: string | symbol, event?: string, autoDispose?: boolean): PropertyDecorator;\r\nexport function subscribe(targetOrCallback: string | symbol, event?: string, autoDispose?: boolean): MethodDecorator;\r\n\r\n/**\r\n * Subscribe to observable or computed by name or by specifying callback explicitely\r\n * @param targetOrCallback { String | Function } name of callback or callback itself\r\n * when observable is decorated and name of observable property when callback is decorated\r\n * @param event { String } Knockout subscription event name\r\n * @param autoDispose { Boolean } if true then subscription will be disposed when entire ViewModel is disposed\r\n */\r\nexport function subscribe(targetOrCallback: string | symbol | Function, event?: string, autoDispose = true) {\r\n    return function (prototype: Object, key: string | symbol) {\r\n        let { value, get } = getDescriptor(prototype, key);\r\n        let target: string | symbol, callback: Function;\r\n        if (typeof value === \"function\") {\r\n            if (typeof targetOrCallback === \"string\" || typeof targetOrCallback === \"symbol\") {\r\n                target = targetOrCallback;                      // @subscribe(\"target\")\r\n                callback = value;                               // callback(value) {}    \r\n            } else {\r\n                throw new Error(\"Subscription target should be a key in decorated ViewModel\");\r\n            }\r\n        } else if (typeof get === \"function\") {\r\n            if (typeof targetOrCallback === \"function\") {\r\n                target = key;                                   // @subscribe(ViewModel.prototype.callback)\r\n                callback = targetOrCallback;                    // @observable target;\r\n            } else if (typeof targetOrCallback === \"string\" || typeof targetOrCallback === \"symbol\") {\r\n                target = key;                                   // @subscribe(\"callback\")\r\n                callback = prototype[targetOrCallback];         // @observable target;\r\n            } else {\r\n                throw new Error(\"Subscription callback should be a function or key in decorated ViewModel\");\r\n            }\r\n        }\r\n        getDecorators(getMetaData(prototype), target).push({\r\n            type: DecoratorType.Subscribe,\r\n            value: callback,\r\n            event: event,\r\n            dispose: autoDispose,\r\n        });\r\n        if (autoDispose) {\r\n            redefineDispose(prototype);\r\n        }\r\n    }\r\n}"],"names":[],"mappings":"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"}